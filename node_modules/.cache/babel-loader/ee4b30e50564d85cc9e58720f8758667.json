{"ast":null,"code":"var _jsxFileName = \"/home/andre/bootcamp2020/my-app/src/pages/Main/index.js\";\nimport React, { Component } from 'react';\nimport { FaGithubAlt, FaPlus, FaSpinner } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\nimport api from '../../services/api';\nimport Container from '../../components/Container';\nimport { Form, SubmitButton, List } from './styles';\nexport default class Main extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      newRepo: '',\n      repositories: [],\n      loading: false,\n      error: null\n    };\n\n    this.handleInputChange = e => {\n      this.setState({\n        newRepo: e.target.value\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      this.setState({\n        loading: true,\n        error: false\n      });\n\n      try {\n        const {\n          newRepo,\n          repositories\n        } = this.state;\n        if (newRepo === '') throw 'Você precisa indicar um repositório';\n        const hasRepo = repositories.find(r => r.name === newRepo);\n        if (hasRepo) throw 'Repositório Duplicado';\n        const response = await api.get(`/repos/${newRepo}`);\n        const data = {\n          name: response.data.full_name\n        };\n        this.setState({\n          repositories: [...repositories, data],\n          newRepo: ''\n        });\n      } catch (error) {\n        this.setState({\n          error: true\n        });\n      } finally {\n        this.setState({\n          loading: false\n        });\n      }\n    };\n  }\n\n  // Carregar os dados do localStorage\n  componentDidMount() {\n    const repositories = localStorage.getItem('repositories');\n\n    if (repositories) {\n      this.setState({\n        repositories: JSON.parse(repositories)\n      });\n    }\n  } // Salvar os dados do localStorage\n\n\n  componentDidUpdate(_, prevState) {\n    const {\n      repositories\n    } = this.state;\n\n    if (prevState.repositories !== repositories) {\n      localStorage.setItem('repositories', JSON.stringify(repositories));\n    }\n  }\n\n  render() {\n    const {\n      newRepo,\n      loading,\n      repositories,\n      error\n    } = this.state;\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(FaGithubAlt, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), \"Reposit\\xF3rios\"), React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      error: error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Adicionar reposit\\xF3rio\",\n      value: newRepo,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(SubmitButton, {\n      loading: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, loading ? React.createElement(FaSpinner, {\n      color: \"#FFF\",\n      size: 14,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }) : React.createElement(FaPlus, {\n      color: \"#FFF\",\n      size: 14,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }))), React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, repositories.map(repository => React.createElement(\"li\", {\n      key: repository.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, repository.name), React.createElement(Link, {\n      to: `/repository/${encodeURIComponent(repository.name)}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Detalhes\")))));\n  }\n\n}","map":{"version":3,"sources":["/home/andre/bootcamp2020/my-app/src/pages/Main/index.js"],"names":["React","Component","FaGithubAlt","FaPlus","FaSpinner","Link","api","Container","Form","SubmitButton","List","Main","state","newRepo","repositories","loading","error","handleInputChange","e","setState","target","value","handleSubmit","preventDefault","hasRepo","find","r","name","response","get","data","full_name","componentDidMount","localStorage","getItem","JSON","parse","componentDidUpdate","_","prevState","setItem","stringify","render","map","repository","encodeURIComponent"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { FaGithubAlt, FaPlus, FaSpinner } from 'react-icons/fa';\nimport {\tLink\t} from 'react-router-dom';\n\nimport api from '../../services/api';\n\nimport Container from '../../components/Container';\n\nimport { Form, SubmitButton, List } from'./styles';\n\nexport default class Main extends Component {\n\tstate = {\n\t\tnewRepo: '',\n\t\trepositories: [],\n\t\tloading: false,\n\t\terror: null,\n\t};\n\n\t// Carregar os dados do localStorage\n\tcomponentDidMount() {\n\t\tconst repositories = localStorage.getItem('repositories');\n\n\t\tif (repositories) {\n\t\t\tthis.setState({\trepositories: JSON.parse(repositories) });\n\t\t}\n\t}\n\n\t// Salvar os dados do localStorage\n\tcomponentDidUpdate(_, prevState) {\n\t\tconst {\trepositories\t} = this.state;\n\n\t\tif (prevState.repositories !== repositories) {\n\t\t\tlocalStorage.setItem('repositories', JSON.stringify(repositories));\n\t\t}\n\t}\n\n\thandleInputChange = e => {\n\t\tthis.setState({\tnewRepo: e.target.value\t});\n\t};\n\n\thandleSubmit = async e => {\n\t\te.preventDefault();\n\n\t\tthis.setState({\tloading: true, error: false });\n\n\t\ttry {\n\t\t\tconst {\tnewRepo, repositories\t} = this.state;\n\n\t\t\tif (newRepo === '') throw 'Você precisa indicar um repositório';\n\n\t\t\tconst hasRepo = repositories.find(r => r.name === newRepo);\n\n\t\t\tif (hasRepo) throw 'Repositório Duplicado';\n\n\t\t\tconst response = await api.get(`/repos/${newRepo}`);\n\n\t\t\tconst data = {\n\t\t\t\tname: response.data.full_name,\n\t\t\t};\n\n\t\t\tthis.setState({\n\t\t\t\trepositories: [...repositories, data],\n\t\t\t\tnewRepo: '',\n\t\t\t});\n\t\t}\n\t\tcatch (error) {\n\t\t\tthis.setState({error: true});\n\t\t} finally {\n\t\t\tthis.setState({loading: false});\n\t\t}\n\t\t\n\t};\n\t\n\trender() {\n\t\tconst {\tnewRepo, loading, repositories, error } = this.state;\n\n\t\treturn (\n\t\t<Container>\n\t\t\t<h1>\n\t\t\t<FaGithubAlt />\n\t\t\tRepositórios\n\t\t\t</h1>\n\n\t\t\t<Form onSubmit={this.handleSubmit} error={error}>\n\t\t\t\t\t\t<input \n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tplaceholder=\"Adicionar repositório\"\n\t\t\t\t\t\t\tvalue = {newRepo}\n\t\t\t\t\t\t\tonChange={this.handleInputChange}\t\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<SubmitButton loading={loading}>\n\t\t\t\t\t\t\t{loading ? (\n\t\t\t\t\t\t\t\t\t<FaSpinner color=\"#FFF\" size={14} />\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<FaPlus color=\"#FFF\" size={14} />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</SubmitButton>\n\t\t\t</Form>\n\n\t\t\t\t\t<List>\n\t\t\t\t\t\t{repositories.map(repository => (\n\t\t\t\t\t\t\t<li key={repository.name}>\n\t\t\t\t\t\t\t\t<span>{repository.name}</span>\n\t\t\t\t\t\t\t\t<Link to={`/repository/${encodeURIComponent(repository.name)}`}>Detalhes</Link>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</List>\n\t\t</Container>\n\t\t\t);\n\t}\n}"]},"metadata":{},"sourceType":"module"}