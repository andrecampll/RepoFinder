{"ast":null,"code":"var _jsxFileName = \"/home/andre/bootcamp2020/my-app/src/pages/Repository/index.js\";\nimport React, { Component } from 'react';\nimport { FaSpinner } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport api from '../../services/api';\nimport Container from '../../components/Container';\nimport { Loading, Owner, IssueList, IssueFilter, PageActions } from './styles';\nexport default class Repository extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      repository: {},\n      issues: [],\n      loading: true,\n      filters: [{\n        state: 'all',\n        label: 'Todas',\n        active: true\n      }, {\n        state: 'open',\n        label: 'Abertas',\n        active: false\n      }, {\n        state: 'closed',\n        label: 'Fechadas',\n        active: false\n      }],\n      filterIndex: 0,\n      page: 1\n    };\n\n    this.loadIssues = async () => {\n      const {\n        match\n      } = this.props;\n      const {\n        filters,\n        filterIndex,\n        page\n      } = this.state;\n      const repoName = decodeURIComponent(match.params.repository);\n      const response = await api.get(`/repos/${repoName}/issues`, {\n        params: {\n          state: filters[filterIndex].state,\n          per_page: 5,\n          page\n        }\n      });\n      this.setState({\n        issues: response.data\n      });\n    };\n\n    this.handleFilterClick = async filterIndex => {\n      await this.setState({\n        filterIndex\n      });\n      this.loadIssues();\n    };\n\n    this.handlePage = async action => {\n      const {\n        page\n      } = this.state;\n      await this.setState({\n        page: action === 'back' ? page - 1 : page + 1\n      });\n      this.loadIssues();\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match\n    } = this.props;\n    const {\n      filters\n    } = this.state;\n    const repoName = decodeURIComponent(match.params.repository);\n    const [repository, issues] = await Promise.all([api.get(`/repos/${repoName}`), api.get(`/repos/${repoName}/issues`, {\n      params: {\n        state: filters.find(f => f.active).state,\n        per_page: 5\n      }\n    })]);\n    this.setState({\n      repository: repository.data,\n      issues: issues.data,\n      loading: false\n    });\n  }\n\n  render() {\n    const {\n      repository,\n      issues,\n      loading,\n      filters,\n      filterIndex,\n      page\n    } = this.state;\n\n    if (loading) {\n      return React.createElement(Loading, {\n        loading: loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, loading ? React.createElement(FaSpinner, {\n        color: \"#FFF\",\n        size: 14,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }) : '', \"Carregando\");\n    }\n\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Owner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Voltar aos reposit\\xF3rios\"), React.createElement(\"img\", {\n      src: repository.owner.avatar_url,\n      alt: repository.owner.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, repository.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, repository.description)), React.createElement(IssueList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(IssueFilter, {\n      active: filterIndex,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, filters.map((filter, index) => React.createElement(\"button\", {\n      key: filter.label,\n      onClick: () => this.handleFilterClick(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, filter.label))), issues.map(issue => React.createElement(\"li\", {\n      key: String(issue.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: issue.user.avatar_url,\n      alt: issue.user.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: issue.html_url,\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, issue.title), issue.labels.map(label => React.createElement(\"span\", {\n      key: String(label.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, label.name))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, issue.user.login))))), React.createElement(PageActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      disabled: page < 2,\n      onClick: () => this.handlePage('back'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Anterior\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"P\\xE1gina \", page), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.handlePage('next'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Pr\\xF3ximo\")));\n  }\n\n}\nRepository.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      repository: PropTypes.string\n    })\n  }).isRequired\n};","map":{"version":3,"sources":["/home/andre/bootcamp2020/my-app/src/pages/Repository/index.js"],"names":["React","Component","FaSpinner","Link","PropTypes","api","Container","Loading","Owner","IssueList","IssueFilter","PageActions","Repository","state","repository","issues","loading","filters","label","active","filterIndex","page","loadIssues","match","props","repoName","decodeURIComponent","params","response","get","per_page","setState","data","handleFilterClick","handlePage","action","componentDidMount","Promise","all","find","f","render","owner","avatar_url","login","name","description","map","filter","index","issue","String","id","user","html_url","title","labels","propTypes","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { FaSpinner } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport api from '../../services/api';\n\nimport Container from '../../components/Container';\nimport { Loading, Owner, IssueList, IssueFilter, PageActions } from './styles';\n\nexport default class Repository extends Component {\n  static propTypes = {\n    match: PropTypes.shape({\n      params: PropTypes.shape({\n        repository: PropTypes.string,\n      }),\n    }).isRequired,\n  };\n  \n\n  state = {\n    repository: {},\n    issues: [],\n    loading: true,\n    filters: [\n      { state: 'all', label: 'Todas', active: true },\n      { state: 'open', label: 'Abertas', active: false },\n      { state: 'closed', label: 'Fechadas', active: false },\n    ],\n    filterIndex: 0,\n    page: 1,\n  };\n\n  async componentDidMount() {\n    const { match } = this.props;\n    const { filters } = this.state;\n\n    const repoName = decodeURIComponent(match.params.repository);\n\n    const [repository, issues] = await Promise.all([\n      api.get(`/repos/${repoName}`),\n      api.get(`/repos/${repoName}/issues`, {\n        params: {\n          state: filters.find(f => f.active).state,\n          per_page: 5,\n        },\n      }), \n    ]);\n    \n    this.setState({\n      repository: repository.data,\n      issues: issues.data,\n      loading: false,\n    });\n  }\n\n  loadIssues = async () => {\n    const { match } = this.props;\n    const { filters, filterIndex, page } = this.state;\n\n    const repoName = decodeURIComponent(match.params.repository);\n\n    const response = await api.get(`/repos/${repoName}/issues`, {\n      params: {\n        state: filters[filterIndex].state,\n        per_page: 5,\n        page,\n      },\n    });\n\n    this.setState({ issues: response.data });\n  };\n\n  handleFilterClick = async filterIndex => {\n    await this.setState({ filterIndex });\n    this.loadIssues();\n  };\n\n  handlePage = async action => {\n    const { page } = this.state;\n    await this.setState({\n      page: action === 'back' ? page - 1 : page + 1,\n    });\n    this.loadIssues();\n  }\n\n  render() {\n    const { repository, issues, loading, filters, filterIndex, page } = this.state;\n\n    if(loading) {\n      return <Loading loading={loading}>\n        {loading ? (\n          <FaSpinner color=\"#FFF\" size={14} />\n        ) : ('')}Carregando</Loading>\n    }\n\n    return (\n      <Container>\n        <Owner>\n          <Link to=\"/\">Voltar aos repositórios</Link>\n          <img src={repository.owner.avatar_url} alt={repository.owner.login}/>\n          <h1>{repository.name}</h1>\n          <p>{repository.description}</p>\n        </Owner>\n\n        <IssueList>\n          <IssueFilter active={filterIndex}>\n            {filters.map((filter, index) => (\n              <button \n                key={filter.label}\n                onClick={() => this.handleFilterClick(index)}\n            >\n              {filter.label}\n              </button>\n            ))}\n          </IssueFilter>\n          {issues.map( issue => (\n            <li key={String(issue.id)}>\n              <img src={issue.user.avatar_url} alt={issue.user.login} />\n              <div>\n                <strong>\n                  <a href={issue.html_url} target=\"_blank\">{issue.title}</a>\n                  {issue.labels.map(label => (\n                    <span key={String(label.id)}>{label.name}</span>\n                  ))}\n                </strong>\n                <p>{issue.user.login}</p>\n              </div>\n            </li>\n          ))}\n        </IssueList>\n        <PageActions>\n          <button\n            type=\"button\"\n            disabled={page<2}\n            onClick={() => this.handlePage('back')}\n          >\n            Anterior\n          </button>\n          <span>Página {page}</span>\n          <button type=\"button\" onClick={() => this.handlePage('next')}>\n            Próximo\n          </button>\n        </PageActions>\n      </Container>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}